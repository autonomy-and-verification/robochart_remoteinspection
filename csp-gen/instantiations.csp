-- generate nat not
nametype core_nat = {0..2}

-- generate --

-- MODULE CONSTANTS

-- CONTROLLER CONSTANTS

-- STATEMACHINE CONSTANTS

-- generate waypoint
waypoint(coord) = 0

-- generate core_clock_type
nametype core_clock_type = {0..10}

-- BASIC FUNCTIONS

-- generate string
nametype core_string = LSeq(Char,2)

-- generate const_JackalPlatform_number_of_waypoints
const_JackalPlatform_number_of_waypoints = 0

-- CONTROLLER CONSTANTS

-- STATEMACHINE CONSTANTS

-- OPERATION CONSTANTS

-- BASIC TYPES

-- generate real
nametype core_real = union({ -2..2},{calc_type_min(Union(
			{{Plus(CurrentWaypoint, 1, core_nat)|CurrentWaypoint <- {0..2}},{0..2},{0..2},{0..2},{0..2},{0..2},{0..2},{1},{0},{CurrentWaypoint|CurrentWaypoint <- {0..2}},{0},{tuple2_2(GoalLocation)|GoalLocation <- {(x0__,x1__) | x0__ <- core_nat,x1__ <- core_nat}},{tuple2_1(GoalLocation)|GoalLocation <- {(x0__,x1__) | x0__ <- core_nat,x1__ <- core_nat}},{0}}))..calc_type_max(Union({{Plus(CurrentWaypoint, 1, core_nat)|CurrentWaypoint <- {0..2}},{0..2},{0..2},{0..2},{0..2},{0..2},{0..2},{1},{0},{CurrentWaypoint|CurrentWaypoint <- {0..2}},{0},{tuple2_2(GoalLocation)|GoalLocation <- {(x0__,x1__) | x0__ <- core_nat,x1__ <- core_nat}},{tuple2_1(GoalLocation)|GoalLocation <- {(x0__,x1__) | x0__ <- core_nat,x1__ <- core_nat}},{0}}))}) 

-- VECTOR TYPES AND OPERATIONS


-- CLOCKS

-- generate waypoint_inverse
waypoint_inverse(wp) = (0,0)

-- generate int
nametype core_int = union({ -2..2},{calc_type_min(Union(
			{{Plus(CurrentWaypoint, 1, core_nat)|CurrentWaypoint <- {0..2}},{0..2},{0..2},{0..2},{0..2},{0..2},{0..2},{1},{0},{CurrentWaypoint|CurrentWaypoint <- {0..2}},{0},{tuple2_2(GoalLocation)|GoalLocation <- {(x0__,x1__) | x0__ <- core_nat,x1__ <- core_nat}},{tuple2_1(GoalLocation)|GoalLocation <- {(x0__,x1__) | x0__ <- core_nat,x1__ <- core_nat}},{0}}))..calc_type_max(Union({{Plus(CurrentWaypoint, 1, core_nat)|CurrentWaypoint <- {0..2}},{0..2},{0..2},{0..2},{0..2},{0..2},{0..2},{1},{0},{CurrentWaypoint|CurrentWaypoint <- {0..2}},{0},{tuple2_2(GoalLocation)|GoalLocation <- {(x0__,x1__) | x0__ <- core_nat,x1__ <- core_nat}},{tuple2_1(GoalLocation)|GoalLocation <- {(x0__,x1__) | x0__ <- core_nat,x1__ <- core_nat}},{0}}))})

-- generate -- OPERATION BOUNDS

-- MODULE CONSTANTS

-- CONTROLLER CONSTANTS

-- STATEMACHINE CONSTANTS

-- OPERATION CONSTANTS

-- BASIC TYPES

-- generate Div
Div(e1,e2,T) = if member(e1/e2,T) then e1/e2 else e1

-- generate Neg
Neg(e1,T) = if member(-e1,T) then -e1 else e1

-- generate boolean
nametype core_boolean = Bool

-- generate Mult
Mult(e1,e2,T) = if member(e1*e2,T) then e1*e2 else e1

-- generate Modulus
Modulus(e1,e2,T) = if member(e1%e2,T) then e1%e2 else e1

-- generate const_Agent_number_of_waypoints
const_Agent_number_of_waypoints = 0

-- OPERATION CONSTANTS

-- BASIC TYPES

-- generate Plus
Plus(e1,e2,T) = if member(e1+e2,T) then e1+e2 else e1

-- generate Minus
Minus(e1,e2,T) = if member(e1-e2,T) then e1-e2 else e1

